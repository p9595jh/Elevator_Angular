{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/content/content.component.css","webpack:///./src/app/components/content/content.component.html","webpack:///./src/app/components/content/content.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/free/free.component.css","webpack:///./src/app/components/free/free.component.html","webpack:///./src/app/components/free/free.component.ts","webpack:///./src/app/components/join/join.component.css","webpack:///./src/app/components/join/join.component.html","webpack:///./src/app/components/join/join.component.ts","webpack:///./src/app/components/loginpage/loginpage.component.css","webpack:///./src/app/components/loginpage/loginpage.component.html","webpack:///./src/app/components/loginpage/loginpage.component.ts","webpack:///./src/app/components/music/music.component.css","webpack:///./src/app/components/music/music.component.html","webpack:///./src/app/components/music/music.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/start/start.component.css","webpack:///./src/app/components/start/start.component.html","webpack:///./src/app/components/start/start.component.ts","webpack:///./src/app/components/subboard/subboard.component.css","webpack:///./src/app/components/subboard/subboard.component.html","webpack:///./src/app/components/subboard/subboard.component.ts","webpack:///./src/app/components/suggest/suggest.component.css","webpack:///./src/app/components/suggest/suggest.component.html","webpack:///./src/app/components/suggest/suggest.component.ts","webpack:///./src/app/services/handleboard.service.ts","webpack:///./src/app/services/handleuser.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div id=\\\"content\\\">\\n  <ng-flash-message></ng-flash-message>\\n  <router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { StartComponent } from './components/start/start.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { FreeComponent } from './components/free/free.component';\nimport { MusicComponent } from './components/music/music.component';\nimport { SubboardComponent } from './components/subboard/subboard.component';\nimport { SuggestComponent } from './components/suggest/suggest.component';\nimport { LoginpageComponent } from './components/loginpage/loginpage.component';\nimport { JoinComponent } from './components/join/join.component';\nimport { ContentComponent } from './components/content/content.component';\n\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\nimport { HandleuserService } from './services/handleuser.service';\nimport { HandleboardService } from './services/handleboard.service';\n\nconst appRoutes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'start', component: StartComponent },\n  { path: 'free', component: FreeComponent },\n  { path: 'music', component: MusicComponent },\n  { path: 'subboard', component: SubboardComponent },\n  { path: 'suggest', component: SuggestComponent },\n  { path: 'loginpage', component: LoginpageComponent },\n  { path: 'content', component: ContentComponent },\n  { path: 'join', component: JoinComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    StartComponent,\n    FooterComponent,\n    FreeComponent,\n    MusicComponent,\n    SubboardComponent,\n    SuggestComponent,\n    LoginpageComponent,\n    MusicComponent,\n    ContentComponent,\n    JoinComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    NgFlashMessagesModule.forRoot()\n  ],\n  providers: [\n    HandleuserService,\n    HandleboardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\">\\n  <span style=\\\"font-size:20px;\\\">{{content.title}}</span>\\n  <span style=\\\"float:right;\\\">\\n    <a class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{content.nickname}}</a>\\n  </span>\\n  <hr/>\\n  <span style=\\\"float:right; font-size:13px;\\\">{{content.writedate}}</span>\\n  <br/>\\n  <span style=\\\"float:right; font-size:13px;\\\">조회 {{content.hit}} &nbsp;댓글 {{content.comment.length}}</span>\\n  <ng-container *ngIf=\\\"listurl == 'music'\\\">\\n    <br/>\\n    <span id=\\\"gradeSpan\\\" style=\\\"float:right; font-size:13px;\\\">평점 {{content.grade}} by {{content.gradeby.length}}명</span>\\n    <ng-container *ngIf=\\\"content.grade >= 3 && content.gradeby.length >= 1 && user.id == content.id && writer.boardRequest == 0\\\">\\n      <br/><button id=\\\"boardRequest\\\" style=\\\"float:right;\\\" onclick=\\\"\\\">게시판 생성 요청</button>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"user.id == 'admin' && writer.boardRequest == 1\\\">\\n      <br/><button id=\\\"boardRequest\\\" style=\\\"float:right;\\\" onclick=\\\"\\\">게시판 생성 요청</button>\\n    </ng-container>\\n  </ng-container><br/><br/>\\n\\n  <div style=\\\"text-align:center;\\\" *ngIf=\\\"content.image != ''\\\">\\n    <img src=\\\"content.image\\\" width=\\\"imageWidth\\\"/>\\n    <br/><br/>\\n  </div>\\n  <div style=\\\"text-align:center;\\\" *ngIf=\\\"content.image != ''\\\">\\n    <audio controls>\\n      <source src=\\\"content.audio\\\"/>\\n    </audio>\\n    <br/><br/>\\n  </div>\\n  <div style=\\\"padding:20px;\\\">\\n    <pre class=\\\"contentView\\\">{{content.content}}</pre>\\n  </div><br/><br/><br/>\\n\\n  <div style=\\\"text-align:center;\\\">\\n    <ng-container *ngIf=\\\"listurl == 'music' && loggedIn\\\">\\n      <select id=\\\"grade\\\" *ngIf=\\\"listurl == 'music' && loggedIn\\\">\\n        <option value=\\\"5\\\">★★★★★</option>\\n        <option value=\\\"4\\\">★★★★</option>\\n        <option value=\\\"3\\\">★★★</option>\\n        <option value=\\\"2\\\">★★</option>\\n        <option value=\\\"1\\\">★</option>\\n      </select>\\n      <button onclick=\\\"\\\" id=\\\"recommendbtn\\\">평가</button>\\n    </ng-container>\\n    <button *ngIf=\\\"loggedIn && listurl != 'music'\\\" id=\\\"recommendbtn\\\" onclick=\\\"\\\">추천 {{content.recommend}}</button>\\n  </div><br/><hr/>\\n\\n  <table class=\\\"tb2\\\" *ngFor=\\\"let val of content.comment\\\">\\n    <tr style=\\\"height:110px; vertical-align:top;\\\">\\n      <td style=\\\"text-align:center; vertical-align:middle; width:110px; border-right:1px solid rgb(0,91,159);\\\">\\n        <img src=\\\"images/profileimages/val.id\\\" width=\\\"70\\\" height=\\\"70\\\" />\\n      </td>\\n      <td style=\\\"vertical-align:top;\\\">\\n        <div style=\\\"font-size:12px; padding:2px; margin-left:5px; border-bottom:1px dotted rgb(0,91,159);\\\">\\n          <b *ngIf=\\\"val.id == 'admin'\\\"><a class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{val.nickname}}</a></b>\\n          <a *ngIf=\\\"val.id != 'admin'\\\" class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{val.nickname}}</a>\\n          <span style=\\\"font-size:12px; float:right;\\\">\\n            <form *ngIf=\\\"user.id == val.id || user.id == 'admin' || boardtype == user.id\\\" (submit)=\\\"onDeleteComment()\\\" id=\\\"removeCmt+{{val.num}}\\\" style=\\\"display:none;\\\">\\n              <input type=\\\"hidden\\\" name=\\\"contentnum\\\" [(ngModel)]=\\\"contentnum\\\" value=\\\"{{content.num}}\\\" />\\n              <input type=\\\"hidden\\\" name=\\\"num\\\" [(ngModel)]=\\\"num\\\" value=\\\"{{val.num}}\\\" />\\n              <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" value=\\\"{{val.id}}\\\" />\\n              <input type=\\\"hidden\\\" name=\\\"boardtype\\\" value=\\\"{{boardtype}}\\\" />\\n            </form>\\n            <a *ngIf=\\\"user.id == val.id || user.id == 'admin' || boardtype == user.id\\\" class=\\\"link\\\" href=\\\"javascript:;\\\" onclick=\\\"document.getElementById('removeCmt' + val.num).submit()\\\">삭제</a>\\n            <span>{{val.writedate}}</span>\\n          </span>\\n        </div>\\n        <div style=\\\"padding-left:10px;\\\">\\n          <pre class=\\\"contentView\\\" *ngIf=\\\"content.id == val.id\\\" style=\\\"color:blue;\\\">{{val.comment}}</pre>\\n          <pre class=\\\"contentView\\\" *ngIf=\\\"content.id != val.id\\\">{{val.comment}}</pre>\\n        </div>\\n      </td>\\n      <td style=\\\"text-align:right;\\\"></td>\\n    </tr>\\n  </table><br/>\\n  <form *ngIf=\\\"loggedIn && !user.stop\\\" (submit)=\\\"onWriteComment()\\\">\\n    <br/>\\n    <input type=\\\"hidden\\\" name=\\\"board\\\" [(ngModel)]=\\\"board\\\" value=\\\"{{listurl}}\\\" />\\n    <input type=\\\"hidden\\\" name=\\\"_id\\\" [(ngModel)]=\\\"_id\\\" value=\\\"{{content._id}}\\\" />\\n    <table style=\\\"width:700px; margin:auto;\\\">\\n      <tr>\\n        <td><textarea cols=\\\"80\\\" rows=\\\"5\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment\\\"></textarea></td>\\n        <td><input type=\\\"submit\\\" name=\\\"cmt\\\" value=\\\"댓글달기\\\" style=\\\"width:100px; height:80px;\\\" /></td>\\n      </tr>\\n    </table>\\n    <br/>\\n  </form>\\n  <hr/><button style=\\\"float:right;\\\" [routerLink]=\\\"['./listurl', {type: boardtype}]\\\">목록</button><br/><br/>\\n</div>\\n\\n<div class=\\\"box\\\">\\n  <span>{{type}}</span><hr/><br/><br/>\\n  <table class=\\\"tb\\\">\\n    <tr style=\\\"height:25px; font-weight:bold\\\">\\n      <td style=\\\"width:70px\\\">번호</td>\\n      <td style=\\\"width:140px\\\">제목</td>\\n      <td style=\\\"width:65px\\\">작성자</td>\\n      <td style=\\\"width:100px\\\">날짜</td>\\n      <td style=\\\"width:55px\\\">조회수</td>\\n      <td style=\\\"width:40px\\\">추천</td>\\n    </tr>\\n\\n    <ng-container *ngFor=\\\"let val of all\\\">\\n      <tr class=\\\"trhover\\\" style=\\\"height:20px;\\\">\\n        <td>{{val.num}}</td>\\n        <td style=\\\"text-align:left; padding:50px;\\\">\\n          <a class=\\\"link\\\" [routerLink]=\\\"['./content', {type: boardtype, num: val.num}]\\\">{{val.title}}</a> \\n          <span style=\\\"font-size:12px; color:grey;\\\" *ngIf=\\\"val.comment.length > 0\\\"> [{{val.comment.length}}]</span>\\n        </td>\\n        <td>{{val.nickname}}</td>\\n        <td>{{val.writedate}}</td>\\n        <td>{{val.hit}}</td>\\n        <td>{{val.recommend}}</td>\\n      </tr>\\n    </ng-container>\\n\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Http, Headers, Response } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n  paramType: String;\n  paramNum: String;\n\n  loggedIn: boolean;\n  user: Object;\n  imageWidth: Number;\n  content: Object;\n  type: String;\n  listurl: String;\n  boardtype: String;\n  all: Object[];\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private router: Router,\n    private http:Http,\n    private route: ActivatedRoute\n  ) {\n    this.paramType = this.route.snapshot.queryParamMap.get('type');\n    this.paramNum = this.route.snapshot.queryParamMap.get('num');\n  }\n\n  ngOnInit() {\n    this.handleuserService.loggedIn().subscribe(data => {\n      this.loggedIn = data.result;\n\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      this.http.get('http://localhost:3000/content?type='+this.paramType+'&num='+this.paramNum, {headers: headers}).pipe(map((res: Response) => res.json())).subscribe(result => {\n        this.user = result.user;\n        this.imageWidth = result.imageWidth;\n        this.content = result.content;\n        this.type = result.type;\n        this.listurl = result.listurl;\n        this.boardtype = result.boardtype;\n        this.all = result.all;\n      });\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<hr/>\\n<span style=\\\"font-size:12px;\\\">&nbsp; powered by</span>\\n<b style=\\\"font-size:12px;\\\">Project Elevator</b>\\n<br/><br/>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\"><span>자유게시판</span>\\n  <hr/><br/><br/>\\n  <table class=\\\"tb\\\">\\n    <tr style=\\\"height:25px; font-weight:bold\\\">\\n      <td style=\\\"width:70px\\\">번호</td>\\n      <td style=\\\"width:140px\\\">제목</td>\\n      <td style=\\\"width:65px\\\">작성자</td>\\n      <td style=\\\"width:100px\\\">날짜</td>\\n      <td style=\\\"width:55px\\\">조회수</td>\\n      <td style=\\\"width:40px\\\">추천</td>\\n    </tr>\\n\\n    <ng-container *ngFor=\\\"let val of free\\\">\\n      <tr class=\\\"trhover\\\" style=\\\"height:20px;\\\">\\n        <td>{{val.num}}</td>\\n        <td style=\\\"text-align:left; padding:50px;\\\">\\n          <a class=\\\"link\\\" [routerLink]=\\\"['../content']\\\" [queryParams]=\\\"{type: 'free', num: val.num}\\\">{{val.title}}</a> \\n          <span style=\\\"font-size:12px; color:grey;\\\" *ngIf=\\\"val.comment.length > 0\\\"> [{{val.comment.length}}]</span>\\n        </td>\\n        <td>{{val.nickname}}</td>\\n        <td>{{val.writedate}}</td>\\n        <td>{{val.hit}}</td>\\n        <td>{{val.recommend}}</td>\\n      </tr>\\n    </ng-container>\\n\\n  </table>\\n  <br/><br/>\\n\\n  <form method=\\\"POST\\\" action=\\\"./write\\\" *ngIf=\\\"loggedIn\\\">\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"글쓰기\\\" style=\\\"float:right;\\\"/>\\n    <input type=\\\"hidden\\\" name=\\\"type\\\" value=\\\"free\\\"/>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { HandleboardService } from '../../services/handleboard.service';\n\n@Component({\n  selector: 'app-free',\n  templateUrl: './free.component.html',\n  styleUrls: ['./free.component.css']\n})\nexport class FreeComponent implements OnInit {\n  loggedIn: boolean;\n  free: any[];\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private handleboardService: HandleboardService\n  ) { }\n\n  ngOnInit() {\n    this.handleuserService.loggedIn().subscribe(data => {\n      this.loggedIn = data.result;\n      this.handleboardService.getFrees().subscribe(data => {\n        this.free = data.free;\n      });\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"reg\\\"><span style=\\\"float:left;\\\">회원가입 <span class=\\\"regerr\\\"></span></span><br/>\\n    <hr/><br/>\\n    <form (submit)=\\\"submitRegister()\\\">\\n        <table class=\\\"regtable\\\">\\n            <tr>\\n                <td>아이디<span class=\\\"regerr\\\"> *</span></td>\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" /></td>\\n            </tr>\\n            <tr>\\n                <td>비밀번호<span class=\\\"regerr\\\"> *</span></td>\\n                <td><input class=\\\"reginput\\\" type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" /></td>\\n            </tr>\\n            <tr>\\n                <td>이메일<span class=\\\"regerr\\\"> *</span></td>\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" /></td>\\n            </tr>\\n            <tr>\\n                <td>닉네임<span class=\\\"regerr\\\"> *</span></td>\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\" /></td>\\n            </tr>\\n            <tr>\\n                <td>즐겨듣는 장르</td>\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"genre\\\" [(ngModel)]=\\\"genre\\\" /></td>\\n            </tr>\\n            <tr>\\n                <td>자기소개 한마디</td>\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"intro\\\" [(ngModel)]=\\\"intro\\\" /></td>\\n            </tr>\\n            <tr>\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center;\\\"><input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"회원가입\\\" style=\\\"width:200px; height:50px;\\\" /></td>\\n            </tr>\\n        </table><br/>\\n        <hr/><span class=\\\"regerr\\\">* </span><span class=\\\"regerr\\\" style=\\\"color:black;\\\">표시가 된 곳은 필수 입력사항입니다.</span><br/><br/><span class=\\\"link\\\">회원가입 이후 회원정보수정에서 회원코드를 메모해놓으세요. 추후 아이디/비밀번호 찾기에 필요합니다.</span></form>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { Router } from '@angular/router';\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\nimport { Http, Headers, Response } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.css']\n})\nexport class JoinComponent implements OnInit {\n  id: String;\n  password: String;\n  email: String;\n  nickname: String;\n  genre: String;\n  intro: String;\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private router: Router,\n    private http: Http,\n    private flashMessage: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  submitRegister() {\n    const user = {\n      id: this.id,\n      password: this.password,\n      email: this.email,\n      nickname: this.nickname,\n      genre: this.genre,\n      intro: this.intro\n    };\n\n    this.handleuserService.handleRegi(user).subscribe(data => {\n      if ( !data.success ) {\n        this.flashMessage.showFlashMessage({\n          messages: [data.errmsg],\n          type: 'danger',\n          timeout: 3000\n        })\n      }\n      else {\n        this.router.navigate(['./start']);\n      }\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"reg\\\" style=\\\"border-width:0px\\\"><span style=\\\"float:left\\\">로그인</span><br/>\\n  <hr/><br/><br/>\\n  <form (submit)=\\\"onLoginSubmit()\\\">\\n    <input type=\\\"text\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" placeholder=\\\"아이디\\\" style=\\\"width:300px; height:50px\\\"/><br/><br/>\\n    <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"비밀번호\\\" style=\\\"width:300px; height:50px\\\"/><br/><br/>\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"로그인\\\" style=\\\"width:300px; height:50px\\\"/><br/><br/>\\n  </form><br/>\\n  <hr/><a class=\\\"link\\\" [routerLink]=\\\"['./join']\\\" style=\\\"font-size:15px\\\">회원가입</a><span> | </span><a class=\\\"link\\\" [routerLink]=\\\"['./find']\\\" style=\\\"font-size:15px\\\">아이디/비밀번호 찾기</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { Router } from '@angular/router';\nimport { NgFlashMessageService } from 'ng-flash-messages';\n\nimport { Http, Headers, Response } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-loginpage',\n  templateUrl: './loginpage.component.html',\n  styleUrls: ['./loginpage.component.css']\n})\nexport class LoginpageComponent implements OnInit {\n  id: String;\n  password: String;\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private router: Router,\n    private http:Http,\n    private flashMessage: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      id: this.id,\n      password: this.password\n    }\n\n    this.handleuserService.loggingIn(user).subscribe(data => {\n      if ( data.success ) {\n        this.router.navigate(['./start']);\n      }\n      else {\n        this.flashMessage.showFlashMessage({\n          messages: ['로그인 실패'],\n          type: 'danger',\n          timeout: 3000\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\"><span>음악게시판</span>\\n  <hr/><br/><br/>\\n  <table class=\\\"tb\\\">\\n    <tr style=\\\"height:25px; font-weight:bold\\\">\\n      <td style=\\\"width:70px\\\">번호</td>\\n      <td style=\\\"width:140px\\\">제목</td>\\n      <td style=\\\"width:65px\\\">작성자</td>\\n      <td style=\\\"width:100px\\\">날짜</td>\\n      <td style=\\\"width:55px\\\">조회수</td>\\n      <td style=\\\"width:40px\\\">전체평점</td>\\n    </tr>\\n\\n    <ng-container *ngFor=\\\"let val of music\\\">\\n      <tr class=\\\"trhover\\\" style=\\\"height:20px;\\\">\\n        <td>{{val.num}}</td>\\n        <td style=\\\"text-align:left; padding:50px;\\\">\\n          <a class=\\\"link\\\" [routerLink]=\\\"['./content?type=music&num=' + val.num]\\\">{{val.title}}</a> \\n          <span style=\\\"font-size:12px; color:grey;\\\" *ngIf=\\\"val.comment.length > 0\\\">[{{val.comment.length}}]</span>\\n        </td>\\n        <td>{{val.nickname}}</td>\\n        <td>{{val.writedate}}</td>\\n        <td>{{val.hit}}</td>\\n        <td>{{val.grade}}</td>\\n      </tr>\\n    </ng-container>\\n\\n  </table>\\n  <br/><br/>\\n\\n  <form method=\\\"POST\\\" action=\\\"./write\\\" *ngIf=\\\"loggedIn\\\">\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"글쓰기\\\" style=\\\"float:right;\\\"/>\\n    <input type=\\\"hidden\\\" name=\\\"type\\\" value=\\\"music\\\"/>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { HandleboardService } from '../../services/handleboard.service';\n\n@Component({\n  selector: 'app-music',\n  templateUrl: './music.component.html',\n  styleUrls: ['./music.component.css']\n})\nexport class MusicComponent implements OnInit {\n  loggedIn: boolean;\n  music: any[];\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private handleboardService: HandleboardService\n  ) { }\n\n  ngOnInit() {\n    this.handleuserService.loggedIn().subscribe(data => {\n      this.loggedIn = data.result;\n      this.handleboardService.getMusics().subscribe(data => {\n        this.music = data.music;\n      });\n    });\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"topscroll\\\">\\n  <a style=\\\"text-decoration:none; color:black; font-weight:bold;\\\" href=\\\"#top\\\">TOP</a>\\n</div>\\n\\n<header style=\\\"padding-top:20px; padding-bottom:20px;\\\">\\n  <ul style=\\\"float:right; list-style:none;\\\">\\n    <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n      <a [routerLink]=\\\"['./notice']\\\" class=\\\"link\\\">공지사항</a>\\n    </li>\\n    <li *ngIf=\\\"handleuserService.loggedIn()\\\">\\n      <a (click)=\\\"onLogoutClick()\\\" href=\\\"javascript:;\\\" class=\\\"link\\\">로그아웃</a>\\n    </li>\\n    <li *ngIf=\\\"!handleuserService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\">\\n      <a [routerLink]=\\\"['./loginpage']\\\" class=\\\"link\\\">로그인</a>\\n    </li>\\n    <!-- have to add links to admin page here -->\\n  </ul>\\n  <div style=\\\"text-align:center;\\\">\\n    <a style=\\\"text-decoration:none; color:black; font-family:Ubuntu;\\\" [routerLink]=\\\"['./start']\\\">\\n      elevator\\n    </a>\\n  </div>\\n</header>\\n<br/>\\n<div id=\\\"nav\\\">\\n  <nav>\\n    <a [routerLink]=\\\"['./start']\\\">HOME</a>\\n    <a [routerLink]=\\\"['./free']\\\">자유게시판</a>\\n    <a [routerLink]=\\\"['./music']\\\">음악게시판</a>\\n    <a [routerLink]=\\\"['./subboard']\\\">서브게시판</a>\\n    <a [routerLink]=\\\"['./suggest']\\\">건의게시판</a>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  loggedIn: Boolean;\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.handleuserService.loggedIn().subscribe(data => {\n      this.loggedIn = data.result;\n    });\n  }\n\n  onLogoutClick() {\n    this.handleuserService.logout();\n    this.router.navigate(['./start']);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"width:1000px; margin:auto;\\\">\\n  <div *ngIf=\\\"!loggedIn\\\">\\n    <form class=\\\"loginbox\\\" (submit)=\\\"onLoginSubmit()\\\">\\n      <table style=\\\"border-collapse:collapse;\\\">\\n          <hr/>\\n          <tr>\\n              <td><input type=\\\"text\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" placeholder=\\\"아이디\\\" style=\\\"width:120px; height:20px;\\\" /></td>\\n              <td rowspan=\\\"2\\\"><input type=\\\"submit\\\" name=\\\"submit\\\" style=\\\"height:55px;\\\" value=\\\"로그인\\\" /></td>\\n          </tr>\\n          <tr>\\n              <td><input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"비밀번호\\\" style=\\\"width:120px; height:20px;\\\" /></td>\\n          </tr>\\n      </table>\\n      <hr/><a class=\\\"link\\\" [routerLink]=\\\"['./join']\\\">회원가입</a><span class=\\\"link\\\"> | </span><a class=\\\"link\\\" [routerLink]=\\\"['./find']\\\">아이디/비밀번호 찾기</a></form>\\n  </div>\\n  <div *ngIf=\\\"loggedIn\\\">\\n    <div class=\\\"loginbox\\\" style=\\\"text-align:center; font-size:13px;\\\">\\n      <b>{{user.nickname}}</b>\\n      <span>님, 반갑습니다</span><br/><hr/>\\n      <b *ngIf=\\\"user.stop\\\" style=\\\"color:red;\\\">정지회원</b>\\n      <b *ngIf=\\\"!user.stop\\\">클린회원</b><br/>\\n      <a href=\\\"javascript:;\\\" onclick=\\\"info()\\\" class=\\\"link\\\">나의 정보</a><br/>\\n      <a class=\\\"link\\\" [routerLink]=\\\"['./fix']\\\">회원정보수정</a> | \\n      <a class=\\\"link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"javascript:;\\\">로그아웃</a><br/><hr/>\\n      <span>가입일: {{user.joindate}}</span>\\n    </div>\\n  </div>\\n  <div class=\\\"date\\\">\\n    <span>make your own music</span><br/>\\n    {{user}}\\n  </div>\\n</div>\\n\\n<div class=\\\"box\\\">\\n  <a class=\\\"board\\\" [routerLink]=\\\"['./free']\\\">ㆍ자유게시판</a><hr/>\\n  <div class=\\\"startdiv\\\">Test</div>\\n</div>\\n<br/><br/>\\n\\n<div class=\\\"box\\\">\\n  <a class=\\\"board\\\" [routerLink]=\\\"['./music']\\\">ㆍ음악게시판</a><hr/>\\n  <div class=\\\"startdiv\\\">Test</div>\\n</div>\\n<br/><br/>\\n\\n<div class=\\\"box\\\">\\n  <a class=\\\"board\\\" [routerLink]=\\\"['./suggest']\\\">ㆍ건의게시판</a><hr/>\\n  <div class=\\\"startdiv\\\">Test</div>\\n</div>\\n<br/><br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { Router } from '@angular/router';\n\nimport { Http, Headers, Response } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit {\n  loggedIn: boolean;\n  user: Object;\n  id: String;\n  password: String;\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private router: Router,\n    private http:Http\n  ) { }\n\n  ngOnInit() {\n    this.handleuserService.getLoginData().subscribe(data => {\n      this.loggedIn = data.result;\n      this.user = data.user;\n    });\n  }\n\n  onLoginSubmit() {\n    const formData = {\n      id: this.id,\n      password: this.password\n    }\n\n    this.handleuserService.loggingIn(formData).subscribe(data => {\n      if ( data.success ) {\n        this.router.navigate(['./start']);\n      }\n      else {\n        this.router.navigate(['localhost:3000/loginpage']);\n      }\n    })\n  }\n\n  onLogoutClick() {\n    this.handleuserService.logout();\n    this.router.navigate(['./start']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  subboard works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subboard',\n  templateUrl: './subboard.component.html',\n  styleUrls: ['./subboard.component.css']\n})\nexport class SubboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\">\\n  <span id=\\\"visitor\\\">건의사항</span><hr/><br/>\\n\\n  <form method=\\\"POST\\\" action=\\\"./handleSuggest\\\" *ngIf=\\\"loggedIn\\\">\\n    <table style=\\\"width:700px; margin:auto\\\">\\n      <tr>\\n        <td>\\n          <textarea cols=\\\"80\\\" rows=\\\"5\\\" name=\\\"comment\\\"></textarea>\\n        </td>\\n        <td>\\n          <input type=\\\"submit\\\" name=\\\"cmt\\\" value=\\\"작성\\\" style=\\\"width:100px; height:80px\\\"/>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n\\n  <table class=\\\"tb2\\\" *ngFor=\\\"let val of content\\\">\\n    <tr style=\\\"height:110px; vertical-align:top;\\\">\\n      <td style=\\\"text-align:center; vertical-align:middle; width:110px; border-right:1px solid rgb(0,91,159)\\\">\\n        <img width=\\\"70\\\" height=\\\"70\\\"/>\\n      </td>\\n      <td>\\n        <div style=\\\"font-size:12px; padding:2px; margin-left:5px; border-bottom:1px dotted rgb(0,91,159);\\\">\\n          <b *ngIf=\\\"val.id == 'admin'\\\">\\n            <a class=\\\"tblink\\\" href=\\\"javascript:;\\\">{{val.nickname}}</a>\\n          </b>\\n          <a *ngIf=\\\"val.id != 'admin'\\\" class=\\\"tblink\\\" href=\\\"javascript:;\\\">{{val.nickname}}</a>\\n          <span style=\\\"font-size:12px; float:right;\\\">{{val.writedate}}</span>\\n        </div>\\n        <div style=\\\"padding-left:10px;\\\">\\n          <pre class=\\\"contentView\\\">{{val.comment}}</pre>\\n        </div>\\n      </td>\\n    </tr>\\n  </table>\\n\\n</div>>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { HandleuserService } from '../../services/handleuser.service';\nimport { HandleboardService } from '../../services/handleboard.service';\n\n@Component({\n  selector: 'app-suggest',\n  templateUrl: './suggest.component.html',\n  styleUrls: ['./suggest.component.css']\n})\nexport class SuggestComponent implements OnInit {\n  loggedIn: boolean;\n  content: any[];\n\n  constructor(\n    private handleuserService: HandleuserService,\n    private handleboardService: HandleboardService\n  ) { }\n\n  ngOnInit() {\n    this.handleuserService.loggedIn().subscribe(data => {\n      this.loggedIn = data.result;\n      this.handleboardService.getSuggests().subscribe(data => {\n        this.content = data.content;\n      });\n    });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class HandleboardService {\n\n  constructor(private http:Http) { }\n\n  getFrees() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/free', {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n  getMusics() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/music', {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n  getSuggests() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/suggest', {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Injectable(\n  // {providedIn: 'root'}\n)\nexport class HandleuserService {\n\n  constructor(\n    private http:Http,\n    private router:Router\n  ) { }\n\n  loggedIn() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/login/ng', {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n  loggingIn(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/login', user, {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n  getLoginData() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/login/data', {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n  logout() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    this.http.get('http://localhost:3000/logout', {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n  handleRegi(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/handleRegi', user, {headers: headers}).pipe(map((res: Response) => res.json()));\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}