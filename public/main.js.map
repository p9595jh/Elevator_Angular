{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/admin.component.css","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/content/content.component.css","webpack:///./src/app/components/content/content.component.html","webpack:///./src/app/components/content/content.component.ts","webpack:///./src/app/components/find/find.component.css","webpack:///./src/app/components/find/find.component.html","webpack:///./src/app/components/find/find.component.ts","webpack:///./src/app/components/fix/fix.component.css","webpack:///./src/app/components/fix/fix.component.html","webpack:///./src/app/components/fix/fix.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/free/free.component.css","webpack:///./src/app/components/free/free.component.html","webpack:///./src/app/components/free/free.component.ts","webpack:///./src/app/components/join/join.component.css","webpack:///./src/app/components/join/join.component.html","webpack:///./src/app/components/join/join.component.ts","webpack:///./src/app/components/loginpage/loginpage.component.css","webpack:///./src/app/components/loginpage/loginpage.component.html","webpack:///./src/app/components/loginpage/loginpage.component.ts","webpack:///./src/app/components/music/music.component.css","webpack:///./src/app/components/music/music.component.html","webpack:///./src/app/components/music/music.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/notice/notice.component.css","webpack:///./src/app/components/notice/notice.component.html","webpack:///./src/app/components/notice/notice.component.ts","webpack:///./src/app/components/start/start.component.css","webpack:///./src/app/components/start/start.component.html","webpack:///./src/app/components/start/start.component.ts","webpack:///./src/app/components/subadmin/subadmin.component.css","webpack:///./src/app/components/subadmin/subadmin.component.html","webpack:///./src/app/components/subadmin/subadmin.component.ts","webpack:///./src/app/components/subboard/subboard.component.css","webpack:///./src/app/components/subboard/subboard.component.html","webpack:///./src/app/components/subboard/subboard.component.ts","webpack:///./src/app/components/subs/subs.component.css","webpack:///./src/app/components/subs/subs.component.html","webpack:///./src/app/components/subs/subs.component.ts","webpack:///./src/app/components/suggest/suggest.component.css","webpack:///./src/app/components/suggest/suggest.component.html","webpack:///./src/app/components/suggest/suggest.component.ts","webpack:///./src/app/components/write/write.component.css","webpack:///./src/app/components/write/write.component.html","webpack:///./src/app/components/write/write.component.ts","webpack:///./src/app/services/handleboard.service.ts","webpack:///./src/app/services/handleuser.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div id=\\\"content\\\">\\r\\n  <ng-flash-message></ng-flash-message>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app works!';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n// import { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { StartComponent } from './components/start/start.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { FreeComponent } from './components/free/free.component';\r\nimport { MusicComponent } from './components/music/music.component';\r\nimport { SubboardComponent } from './components/subboard/subboard.component';\r\nimport { SuggestComponent } from './components/suggest/suggest.component';\r\nimport { LoginpageComponent } from './components/loginpage/loginpage.component';\r\nimport { JoinComponent } from './components/join/join.component';\r\nimport { ContentComponent } from './components/content/content.component';\r\n\r\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\r\nimport { HandleuserService } from './services/handleuser.service';\r\nimport { HandleboardService } from './services/handleboard.service';\r\nimport { WriteComponent } from './components/write/write.component';\r\nimport { SubsComponent } from './components/subs/subs.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { FindComponent } from './components/find/find.component';\r\nimport { FixComponent } from './components/fix/fix.component';\r\nimport { NoticeComponent } from './components/notice/notice.component';\r\nimport { SubadminComponent } from './components/subadmin/subadmin.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: StartComponent },\r\n  { path: 'start', component: StartComponent },\r\n  { path: 'free', component: FreeComponent },\r\n  { path: 'music', component: MusicComponent },\r\n  { path: 'subs', component: SubsComponent },\r\n  { path: 'subboard', component: SubboardComponent },\r\n  { path: 'suggest', component: SuggestComponent },\r\n  { path: 'loginpage', component: LoginpageComponent },\r\n  { path: 'content', component: ContentComponent },\r\n  { path: 'join', component: JoinComponent },\r\n  { path: 'admin', component: AdminComponent },\r\n  { path: 'find', component: FindComponent },\r\n  { path: 'fix', component: FixComponent },\r\n  { path: 'notice', component: NoticeComponent },\r\n  { path: 'subadmin', component: SubadminComponent }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    StartComponent,\r\n    FooterComponent,\r\n    FreeComponent,\r\n    MusicComponent,\r\n    SubboardComponent,\r\n    SuggestComponent,\r\n    LoginpageComponent,\r\n    MusicComponent,\r\n    ContentComponent,\r\n    JoinComponent,\r\n    WriteComponent,\r\n    SubsComponent,\r\n    AdminComponent,\r\n    FindComponent,\r\n    FixComponent,\r\n    NoticeComponent,\r\n    SubadminComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    NgFlashMessagesModule.forRoot()\r\n  ],\r\n  providers: [\r\n    this.Location,\r\n    HandleuserService,\r\n    HandleboardService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\">\\r\\n  <table class=\\\"admintable\\\">\\r\\n    <tr>\\r\\n      <th>ID</th>\\r\\n      <th>관리</th>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let val of users\\\">\\r\\n      <tr *ngIf=\\\"val.id != 'admin' && !val.stop\\\">\\r\\n        <td><b style=\\\"cursor:pointer;\\\" id=\\\"val.id\\\" onclick=\\\"\\\">{{val.id}}</b></td>\\r\\n        <td><button onclick=\\\"\\\" id=\\\"val.id + 'button'\\\">정지</button></td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"val.id != 'admin' && val.stop\\\">\\r\\n        <td><b style=\\\"cursor:pointer; color:red;\\\" id=\\\"val.id\\\" onclick=\\\"\\\">{{val.id}}</b></td>\\r\\n        <td><button onclick=\\\"\\\" id=\\\"val.id + 'button'\\\">해제</button></td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  users: Object[];\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    this.http.get('http://localhost:3000/admin', {headers: headers}).pipe(map((res: Response) => res.json())).subscribe(data => {\r\n      if ( data.result ) {\r\n        this.users = data.users;\r\n      }\r\n      else {\r\n        this.router.navigate(['./start']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\">\\r\\n  <span style=\\\"font-size:20px;\\\">{{content.title}}</span>\\r\\n  <span style=\\\"float:right;\\\">\\r\\n    <a class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{content.nickname}}</a>\\r\\n  </span>\\r\\n  <hr/>\\r\\n  <span style=\\\"float:right; font-size:13px;\\\">{{content.writedate}}</span>\\r\\n  <br/>\\r\\n  <span style=\\\"float:right; font-size:13px;\\\">조회 {{content.hit}} &nbsp;댓글 {{content.comment.length}}</span>\\r\\n  <ng-container *ngIf=\\\"listurl == 'music'\\\">\\r\\n    <br/>\\r\\n    <span id=\\\"gradeSpan\\\" style=\\\"float:right; font-size:13px;\\\">평점 {{content.grade}} by {{content.gradeby.length}}명</span>\\r\\n    <ng-container *ngIf=\\\"content.grade >= 3 && content.gradeby.length >= 1 && user.id == content.id && writer.boardRequest == 0\\\">\\r\\n      <br/><button id=\\\"boardRequest\\\" style=\\\"float:right;\\\" onclick=\\\"\\\">게시판 생성 요청</button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"user.id == 'admin' && writer.boardRequest == 1\\\">\\r\\n      <br/><button id=\\\"boardRequest\\\" style=\\\"float:right;\\\" onclick=\\\"\\\">게시판 생성 요청</button>\\r\\n    </ng-container>\\r\\n  </ng-container><br/><br/>\\r\\n\\r\\n  <div style=\\\"text-align:center;\\\" *ngIf=\\\"content.image != ''\\\">\\r\\n    <img src=\\\"content.image\\\" width=\\\"imageWidth\\\"/>\\r\\n    <br/><br/>\\r\\n  </div>\\r\\n  <div style=\\\"text-align:center;\\\" *ngIf=\\\"content.image != ''\\\">\\r\\n    <audio controls>\\r\\n      <source src=\\\"content.audio\\\"/>\\r\\n    </audio>\\r\\n    <br/><br/>\\r\\n  </div>\\r\\n  <div style=\\\"padding:20px;\\\">\\r\\n    <pre class=\\\"contentView\\\">{{content.content}}</pre>\\r\\n  </div><br/><br/><br/>\\r\\n\\r\\n  <div style=\\\"text-align:center;\\\">\\r\\n    <ng-container *ngIf=\\\"listurl == 'music' && loggedIn\\\">\\r\\n      <select id=\\\"grade\\\" *ngIf=\\\"listurl == 'music' && loggedIn\\\">\\r\\n        <option value=\\\"5\\\">★★★★★</option>\\r\\n        <option value=\\\"4\\\">★★★★</option>\\r\\n        <option value=\\\"3\\\">★★★</option>\\r\\n        <option value=\\\"2\\\">★★</option>\\r\\n        <option value=\\\"1\\\">★</option>\\r\\n      </select>\\r\\n      <button onclick=\\\"\\\" id=\\\"recommendbtn\\\">평가</button>\\r\\n    </ng-container>\\r\\n    <button *ngIf=\\\"loggedIn && listurl != 'music'\\\" id=\\\"recommendbtn\\\" onclick=\\\"\\\">추천 {{content.recommend}}</button>\\r\\n  </div><br/><hr/>\\r\\n\\r\\n  <table class=\\\"tb2\\\" *ngFor=\\\"let val of content.comment\\\">\\r\\n    <tr style=\\\"height:110px; vertical-align:top;\\\">\\r\\n      <td style=\\\"text-align:center; vertical-align:middle; width:110px; border-right:1px solid rgb(0,91,159);\\\">\\r\\n        <img src=\\\"images/profileimages/val.id\\\" width=\\\"70\\\" height=\\\"70\\\" />\\r\\n      </td>\\r\\n      <td style=\\\"vertical-align:top;\\\">\\r\\n        <div style=\\\"font-size:12px; padding:2px; margin-left:5px; border-bottom:1px dotted rgb(0,91,159);\\\">\\r\\n          <b *ngIf=\\\"val.id == 'admin'\\\"><a class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{val.nickname}}</a></b>\\r\\n          <a *ngIf=\\\"val.id != 'admin'\\\" class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{val.nickname}}</a>\\r\\n          <span style=\\\"font-size:12px; float:right;\\\">\\r\\n            <form *ngIf=\\\"user.id == val.id || user.id == 'admin' || boardtype == user.id\\\" (submit)=\\\"onDeleteComment()\\\" id=\\\"removeCmt+{{val.num}}\\\" style=\\\"display:none;\\\">\\r\\n              <input type=\\\"hidden\\\" name=\\\"contentnum\\\" [(ngModel)]=\\\"contentnum\\\" value=\\\"{{content.num}}\\\" />\\r\\n              <input type=\\\"hidden\\\" name=\\\"num\\\" [(ngModel)]=\\\"num\\\" value=\\\"{{val.num}}\\\" />\\r\\n              <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" value=\\\"{{val.id}}\\\" />\\r\\n              <input type=\\\"hidden\\\" name=\\\"boardtype\\\" value=\\\"{{boardtype}}\\\" />\\r\\n            </form>\\r\\n            <a *ngIf=\\\"user.id == val.id || user.id == 'admin' || boardtype == user.id\\\" class=\\\"link\\\" href=\\\"javascript:;\\\" onclick=\\\"document.getElementById('removeCmt' + val.num).submit()\\\">삭제</a>\\r\\n            <span>{{val.writedate}}</span>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div style=\\\"padding-left:10px;\\\">\\r\\n          <pre class=\\\"contentView\\\" *ngIf=\\\"content.id == val.id\\\" style=\\\"color:blue;\\\">{{val.comment}}</pre>\\r\\n          <pre class=\\\"contentView\\\" *ngIf=\\\"content.id != val.id\\\">{{val.comment}}</pre>\\r\\n        </div>\\r\\n      </td>\\r\\n      <td style=\\\"text-align:right;\\\"></td>\\r\\n    </tr>\\r\\n  </table><br/>\\r\\n  <form *ngIf=\\\"loggedIn && !user.stop\\\" (submit)=\\\"onWriteComment()\\\">\\r\\n    <br/>\\r\\n    <input type=\\\"hidden\\\" name=\\\"board\\\" [(ngModel)]=\\\"board\\\" value=\\\"{{listurl}}\\\" />\\r\\n    <input type=\\\"hidden\\\" name=\\\"_id\\\" [(ngModel)]=\\\"_id\\\" value=\\\"{{content._id}}\\\" />\\r\\n    <table style=\\\"width:700px; margin:auto;\\\">\\r\\n      <tr>\\r\\n        <td><textarea cols=\\\"80\\\" rows=\\\"5\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment\\\"></textarea></td>\\r\\n        <td><input type=\\\"submit\\\" name=\\\"cmt\\\" value=\\\"댓글달기\\\" style=\\\"width:100px; height:80px;\\\" /></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <br/>\\r\\n  </form>\\r\\n  <hr/><button style=\\\"float:right;\\\" [routerLink]=\\\"['./listurl', {type: boardtype}]\\\">목록</button><br/><br/>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"box\\\">\\r\\n  <span>{{type}}</span><hr/><br/><br/>\\r\\n  <table class=\\\"tb\\\">\\r\\n    <tr style=\\\"height:25px; font-weight:bold\\\">\\r\\n      <td style=\\\"width:70px\\\">번호</td>\\r\\n      <td style=\\\"width:140px\\\">제목</td>\\r\\n      <td style=\\\"width:65px\\\">작성자</td>\\r\\n      <td style=\\\"width:100px\\\">날짜</td>\\r\\n      <td style=\\\"width:55px\\\">조회수</td>\\r\\n      <td style=\\\"width:40px\\\">추천</td>\\r\\n    </tr>\\r\\n\\r\\n    <ng-container *ngFor=\\\"let val of all\\\">\\r\\n      <tr class=\\\"trhover\\\" style=\\\"height:20px;\\\">\\r\\n        <td>{{val.num}}</td>\\r\\n        <td style=\\\"text-align:left; padding:50px;\\\">\\r\\n          <a class=\\\"link\\\" [routerLink]=\\\"['./content', {type: boardtype, num: val.num}]\\\">{{val.title}}</a> \\r\\n          <span style=\\\"font-size:12px; color:grey;\\\" *ngIf=\\\"val.comment.length > 0\\\"> [{{val.comment.length}}]</span>\\r\\n        </td>\\r\\n        <td>{{val.nickname}}</td>\\r\\n        <td>{{val.writedate}}</td>\\r\\n        <td>{{val.hit}}</td>\\r\\n        <td>{{val.recommend}}</td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.css']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n  paramType: String;\r\n  paramNum: String;\r\n\r\n  loggedIn: boolean;\r\n  user: Object;\r\n  imageWidth: Number;\r\n  content: Object;\r\n  type: String;\r\n  listurl: String;\r\n  boardtype: String;\r\n  all: Object[];\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private router: Router,\r\n    private http:Http,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.paramType = this.route.snapshot.queryParamMap.get('type');\r\n    this.paramNum = this.route.snapshot.queryParamMap.get('num');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.loggedIn().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n\r\n      let headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      this.http.get('http://localhost:3000/content?type='+this.paramType+'&num='+this.paramNum, {headers: headers}).pipe(map((res: Response) => res.json())).subscribe(result => {\r\n        this.user = result.user;\r\n        this.imageWidth = result.imageWidth;\r\n        this.content = result.content;\r\n        this.type = result.type;\r\n        this.listurl = result.listurl;\r\n        this.boardtype = result.boardtype;\r\n        this.all = result.all;\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"reg\\\" style=\\\"border-width:0px;\\\"><span style=\\\"float:left;\\\">아이디 찾기</span><br/>\\r\\n  <hr/><br/><span>회원코드를 입력해주세요.</span><br/><br/><input type=\\\"text\\\" id=\\\"findid\\\" /><button (click)=\\\"find('pw')\\\">찾기</button>\\r\\n  <p id=\\\"idresult\\\"></p>\\r\\n</div><br/><br/>\\r\\n<div class=\\\"reg\\\" style=\\\"border-width:0px;\\\"><span style=\\\"float:left;\\\">비밀번호 찾기</span><br/>\\r\\n  <hr/><br/><span>회원코드를 입력해주세요.</span><br/><br/><input type=\\\"text\\\" id=\\\"findpw\\\" /><button (click)=\\\"find('pw')\\\">찾기</button>\\r\\n  <p id=\\\"pwresult\\\"></p>\\r\\n</div><br/><br/>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-find',\r\n  templateUrl: './find.component.html',\r\n  styleUrls: ['./find.component.css']\r\n})\r\nexport class FindComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  find(type) {\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"reg\\\"><span style=\\\"float:left;\\\">회원정보수정 </span><br/>\\r\\n  <hr/><br/>\\r\\n  <form (submit)=\\\"onFixSubmit()\\\">\\r\\n      <table class=\\\"regtable\\\" style=\\\"height:600px;\\\">\\r\\n          <tr>\\r\\n              <td>기존 비밀번호<span class=\\\"regerr\\\">*</span></td>\\r\\n              <td><input class=\\\"reginput\\\" type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td>새 비밀번호<span class=\\\"regerr\\\">*</span></td>\\r\\n              <td><input class=\\\"reginput\\\" type=\\\"password\\\" name=\\\"passwordNew\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td>닉네임<span class=\\\"regerr\\\">*</span></td>\\r\\n              <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\" value=\\\"user.nickname\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td>좋아하는 장르</td>\\r\\n              <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"genre\\\" [(ngModel)]=\\\"genre\\\" value=\\\"user.genre\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td>한줄 자기소개</td>\\r\\n              <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"intro\\\" [(ngModel)]=\\\"intro\\\" value=\\\"user.introduction\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td>프로필 이미지</td>\\r\\n              <td><input type=\\\"file\\\" name=\\\"image\\\" [(ngModel)]=\\\"image\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td colspan=\\\"2\\\" style=\\\"text-align:center;\\\"><input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"수정\\\" style=\\\"width:200px; height:50px;\\\" /></td>\\r\\n          </tr>\\r\\n      </table>\\r\\n  </form><br/>\\r\\n  <hr/><span class=\\\"regerr\\\">* </span><span>표시가 된 곳은 필수 입력사항입니다</span><br/><br/>\\r\\n  <span class=\\\"link\\\">회원코드: {{user._id}}</span>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-fix',\r\n  templateUrl: './fix.component.html',\r\n  styleUrls: ['./fix.component.css']\r\n})\r\nexport class FixComponent implements OnInit {\r\n  user: any;\r\n\r\n  password: String;\r\n  passwordNew: String;\r\n  nickname: String;\r\n  genre: String;\r\n  intro: String;\r\n  image: File;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private flashMessage: NgFlashMessageService,\r\n    private handleuserService: HandleuserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    this.http.get('http://localhost:3000/fix', {headers: headers}).pipe(map((res: Response) => res.json())).subscribe(data => {\r\n      this.user = data.user;\r\n    });\r\n  }\r\n\r\n  onFixSubmit() {\r\n    const formData = {\r\n      password: this.password,\r\n      passwordNew: this.passwordNew,\r\n      nickname: this.nickname,\r\n      genre: this.genre,\r\n      intro: this.intro,\r\n      image: this.image.name\r\n    }\r\n    this.handleuserService.fixUser(formData).subscribe(data => {\r\n      if ( data.success ) {\r\n        this.router.navigate(['./start']);\r\n      }\r\n      else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [data.errmsg],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<hr/>\\r\\n<span style=\\\"font-size:12px;\\\">&nbsp; powered by </span>\\r\\n<b style=\\\"font-size:12px;\\\">Project Elevator</b>\\r\\n<br/><br/>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\"><span>자유게시판</span>\\r\\n  <hr/><br/><br/>\\r\\n  <table class=\\\"tb\\\">\\r\\n    <tr style=\\\"height:25px; font-weight:bold\\\">\\r\\n      <td style=\\\"width:70px\\\">번호</td>\\r\\n      <td style=\\\"width:140px\\\">제목</td>\\r\\n      <td style=\\\"width:65px\\\">작성자</td>\\r\\n      <td style=\\\"width:100px\\\">날짜</td>\\r\\n      <td style=\\\"width:55px\\\">조회수</td>\\r\\n      <td style=\\\"width:40px\\\">추천</td>\\r\\n    </tr>\\r\\n\\r\\n    <ng-container *ngFor=\\\"let val of free\\\">\\r\\n      <tr class=\\\"trhover\\\" style=\\\"height:20px;\\\">\\r\\n        <td>{{val.num}}</td>\\r\\n        <td style=\\\"text-align:left; padding:50px;\\\">\\r\\n          <a class=\\\"link\\\" [routerLink]=\\\"['../content']\\\" [queryParams]=\\\"{type: 'free', num: val.num}\\\">{{val.title}}</a> \\r\\n          <span style=\\\"font-size:12px; color:grey;\\\" *ngIf=\\\"val.comment.length > 0\\\"> [{{val.comment.length}}]</span>\\r\\n        </td>\\r\\n        <td>{{val.nickname}}</td>\\r\\n        <td>{{val.writedate}}</td>\\r\\n        <td>{{val.hit}}</td>\\r\\n        <td>{{val.recommend}}</td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n\\r\\n  </table>\\r\\n  <br/><br/>\\r\\n\\r\\n  <form method=\\\"POST\\\" action=\\\"./write\\\" *ngIf=\\\"loggedIn\\\">\\r\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"글쓰기\\\" style=\\\"float:right;\\\"/>\\r\\n    <input type=\\\"hidden\\\" name=\\\"type\\\" value=\\\"free\\\"/>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { HandleboardService } from '../../services/handleboard.service';\r\n\r\n@Component({\r\n  selector: 'app-free',\r\n  templateUrl: './free.component.html',\r\n  styleUrls: ['./free.component.css']\r\n})\r\nexport class FreeComponent implements OnInit {\r\n  loggedIn: boolean;\r\n  free: any[];\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private handleboardService: HandleboardService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.loggedIn().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n      this.handleboardService.getFrees().subscribe(data => {\r\n        this.free = data.free;\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"reg\\\"><span style=\\\"float:left;\\\">회원가입 <span class=\\\"regerr\\\"></span></span><br/>\\r\\n    <hr/><br/>\\r\\n    <form (submit)=\\\"submitRegister()\\\">\\r\\n        <table class=\\\"regtable\\\">\\r\\n            <tr>\\r\\n                <td>아이디<span class=\\\"regerr\\\"> *</span></td>\\r\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" /></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>비밀번호<span class=\\\"regerr\\\"> *</span></td>\\r\\n                <td><input class=\\\"reginput\\\" type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" /></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>이메일<span class=\\\"regerr\\\"> *</span></td>\\r\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" /></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>닉네임<span class=\\\"regerr\\\"> *</span></td>\\r\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"nickname\\\" [(ngModel)]=\\\"nickname\\\" /></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>즐겨듣는 장르</td>\\r\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"genre\\\" [(ngModel)]=\\\"genre\\\" /></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>자기소개 한마디</td>\\r\\n                <td><input class=\\\"reginput\\\" type=\\\"text\\\" name=\\\"intro\\\" [(ngModel)]=\\\"intro\\\" /></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td colspan=\\\"2\\\" style=\\\"text-align:center;\\\"><input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"회원가입\\\" style=\\\"width:200px; height:50px;\\\" /></td>\\r\\n            </tr>\\r\\n        </table><br/>\\r\\n        <hr/><span class=\\\"regerr\\\">* </span><span class=\\\"regerr\\\" style=\\\"color:black;\\\">표시가 된 곳은 필수 입력사항입니다.</span><br/><br/><span class=\\\"link\\\">회원가입 이후 회원정보수정에서 회원코드를 메모해놓으세요. 추후 아이디/비밀번호 찾기에 필요합니다.</span></form>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-join',\r\n  templateUrl: './join.component.html',\r\n  styleUrls: ['./join.component.css']\r\n})\r\nexport class JoinComponent implements OnInit {\r\n  id: String;\r\n  password: String;\r\n  email: String;\r\n  nickname: String;\r\n  genre: String;\r\n  intro: String;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private router: Router,\r\n    private http: Http,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submitRegister() {\r\n    const user = {\r\n      id: this.id,\r\n      password: this.password,\r\n      email: this.email,\r\n      nickname: this.nickname,\r\n      genre: this.genre,\r\n      intro: this.intro\r\n    };\r\n\r\n    this.handleuserService.handleRegi(user).subscribe(data => {\r\n      if ( !data.success ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: [data.errmsg],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        })\r\n      }\r\n      else {\r\n        this.router.navigate(['./start']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"reg\\\" style=\\\"border-width:0px\\\"><span style=\\\"float:left\\\">로그인</span><br/>\\r\\n  <hr/><br/><br/>\\r\\n  <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" placeholder=\\\"아이디\\\" style=\\\"width:300px; height:50px\\\"/><br/><br/>\\r\\n    <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"비밀번호\\\" style=\\\"width:300px; height:50px\\\"/><br/><br/>\\r\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"로그인\\\" style=\\\"width:300px; height:50px\\\"/><br/><br/>\\r\\n  </form><br/>\\r\\n  <hr/><a class=\\\"link\\\" [routerLink]=\\\"['./join']\\\" style=\\\"font-size:15px\\\">회원가입</a><span> | </span><a class=\\\"link\\\" [routerLink]=\\\"['./find']\\\" style=\\\"font-size:15px\\\">아이디/비밀번호 찾기</a>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-loginpage',\r\n  templateUrl: './loginpage.component.html',\r\n  styleUrls: ['./loginpage.component.css']\r\n})\r\nexport class LoginpageComponent implements OnInit {\r\n  id: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private router: Router,\r\n    private http:Http,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    const user = {\r\n      id: this.id,\r\n      password: this.password\r\n    }\r\n\r\n    this.handleuserService.loggingIn(user).subscribe(data => {\r\n      if ( data.success ) {\r\n        this.router.navigate(['./start']);\r\n      }\r\n      else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['로그인 실패'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\"><span>음악게시판</span>\\r\\n  <hr/><br/><br/>\\r\\n  <table class=\\\"tb\\\">\\r\\n    <tr style=\\\"height:25px; font-weight:bold\\\">\\r\\n      <td style=\\\"width:70px\\\">번호</td>\\r\\n      <td style=\\\"width:140px\\\">제목</td>\\r\\n      <td style=\\\"width:65px\\\">작성자</td>\\r\\n      <td style=\\\"width:100px\\\">날짜</td>\\r\\n      <td style=\\\"width:55px\\\">조회수</td>\\r\\n      <td style=\\\"width:40px\\\">전체평점</td>\\r\\n    </tr>\\r\\n\\r\\n    <ng-container *ngFor=\\\"let val of music\\\">\\r\\n      <tr class=\\\"trhover\\\" style=\\\"height:20px;\\\">\\r\\n        <td>{{val.num}}</td>\\r\\n        <td style=\\\"text-align:left; padding:50px;\\\">\\r\\n          <a class=\\\"link\\\" [routerLink]=\\\"['../content']\\\" [queryParams]=\\\"{type: 'free', num: val.num}\\\">{{val.title}}</a> \\r\\n          <span style=\\\"font-size:12px; color:grey;\\\" *ngIf=\\\"val.comment.length > 0\\\">[{{val.comment.length}}]</span>\\r\\n        </td>\\r\\n        <td>{{val.nickname}}</td>\\r\\n        <td>{{val.writedate}}</td>\\r\\n        <td>{{val.hit}}</td>\\r\\n        <td>{{val.grade}}</td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n\\r\\n  </table>\\r\\n  <br/><br/>\\r\\n\\r\\n  <form method=\\\"POST\\\" action=\\\"./write\\\" *ngIf=\\\"loggedIn\\\">\\r\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"글쓰기\\\" style=\\\"float:right;\\\"/>\\r\\n    <input type=\\\"hidden\\\" name=\\\"type\\\" value=\\\"music\\\"/>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { HandleboardService } from '../../services/handleboard.service';\r\n\r\n@Component({\r\n  selector: 'app-music',\r\n  templateUrl: './music.component.html',\r\n  styleUrls: ['./music.component.css']\r\n})\r\nexport class MusicComponent implements OnInit {\r\n  loggedIn: boolean;\r\n  music: any[];\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private handleboardService: HandleboardService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.loggedIn().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n      this.handleboardService.getMusics().subscribe(data => {\r\n        this.music = data.music;\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"topscroll\\\">\\r\\n  <a style=\\\"text-decoration:none; color:black; font-weight:bold;\\\" href=\\\"#top\\\">TOP</a>\\r\\n</div>\\r\\n\\r\\n<header style=\\\"padding-top:20px; padding-bottom:20px;\\\">\\r\\n  <ul style=\\\"float:right; list-style:none;\\\">\\r\\n    <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n      <a [routerLink]=\\\"['./notice']\\\" class=\\\"link\\\">공지사항</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"loggedIn\\\">\\r\\n      <a (click)=\\\"onLogoutClick()\\\" href=\\\"javascript:;\\\" class=\\\"link\\\">로그아웃</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"!loggedIn\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n      <a [routerLink]=\\\"['./loginpage']\\\" class=\\\"link\\\">로그인</a>\\r\\n    </li>\\r\\n    <!-- have to add links to admin page here -->\\r\\n    <li *ngIf=\\\"loggedIn && user.id == 'admin'\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n      <a [routerLink]=\\\"['./admin']\\\" class=\\\"link\\\">어드민</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"loggedIn && user.boardRequest == 2\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n        <a [routerLink]=\\\"['./subadmin']\\\" class=\\\"link\\\">어드민</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <div style=\\\"text-align:center;\\\">\\r\\n    <a style=\\\"text-decoration:none; color:black; font-family:Ubuntu;\\\" [routerLink]=\\\"['./start']\\\">\\r\\n      elevator\\r\\n    </a>\\r\\n  </div>\\r\\n</header>\\r\\n<br/>\\r\\n<div id=\\\"nav\\\">\\r\\n  <nav>\\r\\n    <a [routerLink]=\\\"['./start']\\\">HOME</a>\\r\\n    <a [routerLink]=\\\"['./free']\\\">자유게시판</a>\\r\\n    <a [routerLink]=\\\"['./music']\\\">음악게시판</a>\\r\\n    <a [routerLink]=\\\"['./subs']\\\">서브게시판</a>\\r\\n    <a [routerLink]=\\\"['./suggest']\\\">건의게시판</a>\\r\\n  </nav>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  loggedIn: Boolean;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.loggedIn().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n    });\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.handleuserService.logout().subscribe(data => {\r\n      this.router.navigated = false;\r\n      this.router.navigate(['./start']);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\">\\r\\n  <span id=\\\"visitor\\\">공지사항</span><hr/><br/>\\r\\n\\r\\n  <form (submit)=\\\"onWrite()\\\" *ngIf=\\\"user.id == 'admin'\\\">\\r\\n    <table style=\\\"width:700px; margin:auto;\\\">\\r\\n      <tr>\\r\\n        <td><textarea cols=\\\"80\\\" rows=\\\"5\\\" name=\\\"comment\\\"></textarea></td>\\r\\n        <td><input type=\\\"submit\\\" name=\\\"cmt\\\" value=\\\"작성\\\" style=\\\"width:100px; height:80px;\\\" /></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </form><br/>\\r\\n\\r\\n  <table class=\\\"tb2\\\" *ngFor=\\\"let val of content\\\">\\r\\n    <tr style=\\\"height:110px; vertical-align:top;\\\">\\r\\n        <td style=\\\"text-align:center; vertical-align:middle; width:110px; border-right:1px solid rgb(0,91,159);\\\">\\r\\n          <img src=\\\"'images/profileimages/' + val.id\\\" width=\\\"70\\\" height=\\\"70\\\" />\\r\\n        </td>\\r\\n        <td>\\r\\n            <div style=\\\"font-size:12px; padding:2px; margin-left:5px; border-bottom:1px dotted rgb(0,91,159);\\\">\\r\\n              <b *ngIf=\\\"val.id == 'admin'\\\">\\r\\n                <a class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{val.nickname}}</a>\\r\\n              </b>\\r\\n              <a *ngIf=\\\"val.id != 'admin'\\\" class=\\\"tblink\\\" href=\\\"javascript:;\\\" onclick=\\\"\\\">{{val.nickname}}</a>\\r\\n              <span style=\\\"font-size:12px; float:right;\\\">{{val.writedate}}</span>\\r\\n            </div>\\r\\n            <div style=\\\"padding-left:10px;\\\">\\r\\n              <pre class=\\\"contentView\\\">{{val.comment}}</pre>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td style=\\\"text-align:right;\\\"></td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleboardService } from '../../services/handleboard.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-notice',\r\n  templateUrl: './notice.component.html',\r\n  styleUrls: ['./notice.component.css']\r\n})\r\nexport class NoticeComponent implements OnInit {\r\n  user: Object;\r\n  content: Object[];\r\n  comment: String;\r\n\r\n  constructor(\r\n    private handleboardService: HandleboardService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.handleboardService.getNotices().subscribe(data => {\r\n      this.user = data.user;\r\n      this.content = data.content;\r\n    });\r\n  }\r\n\r\n  onWrite() {\r\n    const formData = {\r\n      comment: this.comment\r\n    }\r\n    this.handleboardService.handleNotice(formData).subscribe(data => {\r\n      if ( data.success ) {\r\n        this.router.navigated = false;\r\n        this.router.navigate(['./notice']);\r\n      }\r\n      else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['글작성 에러'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"width:1000px; margin:auto;\\\">\\r\\n  <div *ngIf=\\\"!loggedIn\\\">\\r\\n    <form class=\\\"loginbox\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n      <table style=\\\"border-collapse:collapse;\\\">\\r\\n          <hr/>\\r\\n          <tr>\\r\\n              <td><input type=\\\"text\\\" name=\\\"id\\\" [(ngModel)]=\\\"id\\\" placeholder=\\\"아이디\\\" style=\\\"width:120px; height:20px;\\\" /></td>\\r\\n              <td rowspan=\\\"2\\\"><input type=\\\"submit\\\" name=\\\"submit\\\" style=\\\"height:55px;\\\" value=\\\"로그인\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td><input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"비밀번호\\\" style=\\\"width:120px; height:20px;\\\" /></td>\\r\\n          </tr>\\r\\n      </table>\\r\\n      <hr/><a class=\\\"link\\\" [routerLink]=\\\"['./join']\\\">회원가입</a><span class=\\\"link\\\"> | </span><a class=\\\"link\\\" [routerLink]=\\\"['./find']\\\">아이디/비밀번호 찾기</a></form>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"loggedIn\\\">\\r\\n    <div class=\\\"loginbox\\\" style=\\\"text-align:center; font-size:13px;\\\">\\r\\n      <b>{{user.nickname}}</b>\\r\\n      <span>님, 반갑습니다</span><br/><hr/>\\r\\n      <b *ngIf=\\\"user.stop\\\" style=\\\"color:red;\\\">정지회원</b>\\r\\n      <b *ngIf=\\\"!user.stop\\\">클린회원</b><br/>\\r\\n      <a href=\\\"javascript:;\\\" onclick=\\\"info()\\\" class=\\\"link\\\">나의 정보</a><br/>\\r\\n      <a class=\\\"link\\\" [routerLink]=\\\"['./fix']\\\">회원정보수정</a> | \\r\\n      <a class=\\\"link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"javascript:;\\\">로그아웃</a><br/><hr/>\\r\\n      <span>가입일: {{user.joindate}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"date\\\">\\r\\n    <span>make your own music</span><br/>\\r\\n    {{user}}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"box\\\">\\r\\n  <a class=\\\"board\\\" [routerLink]=\\\"['./free']\\\">ㆍ자유게시판</a><hr/>\\r\\n  <div class=\\\"startdiv\\\">Test</div>\\r\\n</div>\\r\\n<br/><br/>\\r\\n\\r\\n<div class=\\\"box\\\">\\r\\n  <a class=\\\"board\\\" [routerLink]=\\\"['./music']\\\">ㆍ음악게시판</a><hr/>\\r\\n  <div class=\\\"startdiv\\\">Test</div>\\r\\n</div>\\r\\n<br/><br/>\\r\\n\\r\\n<div class=\\\"box\\\">\\r\\n  <a class=\\\"board\\\" [routerLink]=\\\"['./suggest']\\\">ㆍ건의게시판</a><hr/>\\r\\n  <div class=\\\"startdiv\\\">Test</div>\\r\\n</div>\\r\\n<br/><br/>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-start',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css']\r\n})\r\nexport class StartComponent implements OnInit {\r\n  loggedIn: boolean;\r\n  user: Object;\r\n  id: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private router: Router,\r\n    private http:Http,\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.getLoginData().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n      this.user = data.user;\r\n    });\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    const formData = {\r\n      id: this.id,\r\n      password: this.password\r\n    }\r\n\r\n    this.handleuserService.loggingIn(formData).subscribe(data => {\r\n      if ( data.success ) {\r\n        this.router.navigate(['./start']);\r\n      }\r\n      else {\r\n        this.router.navigate(['localhost:3000/loginpage']);\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.handleuserService.logout().subscribe(data => {\r\n      this.router.navigated = false;\r\n      this.router.navigate(['./start']);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\">\\r\\n    <table class=\\\"admintable\\\">\\r\\n      <tr>\\r\\n        <th>ID</th>\\r\\n        <th>관리</th>\\r\\n      </tr>\\r\\n      <ng-container *ngFor=\\\"let val of sub.stops\\\">\\r\\n        <tr>\\r\\n          <td><b style=\\\"cursor:pointer; color:red;\\\" id=\\\"val.id\\\" onclick=\\\"\\\">{{val.id}}</b></td>\\r\\n          <td><button onclick=\\\"\\\" id=\\\"val.id + 'button'\\\">해제</button></td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"val.id != user.id || val.id != 'admin'\\\">\\r\\n          <td><b style=\\\"cursor:pointer;\\\" id=\\\"val.id\\\" onclick=\\\"\\\">{{val.id}}</b></td>\\r\\n          <td><button onclick=\\\"\\\" id=\\\"val.id + 'button'\\\">정지</button></td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-subadmin',\r\n  templateUrl: './subadmin.component.html',\r\n  styleUrls: ['./subadmin.component.css']\r\n})\r\nexport class SubadminComponent implements OnInit {\r\n  sub: Object;\r\n  clean: Object[];\r\n  user: Object;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    this.http.get('http://localhost:3000/subadmin', {headers: headers}).pipe(map((res: Response) => res.json())).subscribe(data => {\r\n      if ( data.result ) {\r\n        this.sub = data.sub;\r\n        this.clean = data.clean;\r\n        this.user = data.user;\r\n      }\r\n      else {\r\n        this.router.navigate(['./start']);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\"><span>{{title}}</span>\\r\\n  <hr/><br/><br/>\\r\\n  <table class=\\\"tb\\\">\\r\\n    <tr style=\\\"height:25px; font-weight:bold\\\">\\r\\n      <td style=\\\"width:70px\\\">번호</td>\\r\\n      <td style=\\\"width:140px\\\">제목</td>\\r\\n      <td style=\\\"width:65px\\\">작성자</td>\\r\\n      <td style=\\\"width:100px\\\">날짜</td>\\r\\n      <td style=\\\"width:55px\\\">조회수</td>\\r\\n      <td style=\\\"width:40px\\\">추천</td>\\r\\n    </tr>\\r\\n\\r\\n    <ng-container *ngFor=\\\"let val of subcontents\\\">\\r\\n      <tr class=\\\"trhover\\\" style=\\\"height:20px;\\\">\\r\\n        <td>{{val.num}}</td>\\r\\n        <td style=\\\"text-align:left; padding:50px;\\\">\\r\\n          <a class=\\\"link\\\" [routerLink]=\\\"['../content']\\\" [queryParams]=\\\"{type: val.type, num: val.num}\\\">{{val.title}}</a> \\r\\n          <span style=\\\"font-size:12px; color:grey;\\\" *ngIf=\\\"val.comment.length > 0\\\"> [{{val.comment.length}}]</span>\\r\\n        </td>\\r\\n        <td>{{val.nickname}}</td>\\r\\n        <td>{{val.writedate}}</td>\\r\\n        <td>{{val.hit}}</td>\\r\\n        <td>{{val.recommend}}</td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n\\r\\n  </table>\\r\\n  <br/><br/>\\r\\n\\r\\n  <form method=\\\"POST\\\" action=\\\"./write\\\" *ngIf=\\\"loggedIn && !user.stop\\\">\\r\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"글쓰기\\\" style=\\\"float:right;\\\"/>\\r\\n    <input type=\\\"hidden\\\" name=\\\"type\\\" value=\\\"val.type\\\"/>\\r\\n  </form>\\r\\n  <button style=\\\"float:right;\\\" onclick=\\\"\\\">재생목록</button>\\r\\n  <button style=\\\"float:left;\\\" onclick=\\\"\\\">라이브</button>\\r\\n  <button *ngIf=\\\"user.id == sub.id\\\" style=\\\"float:left;\\\">라이브 생성</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { HandleboardService } from '../../services/handleboard.service';\r\n\r\n@Component({\r\n  selector: 'app-subboard',\r\n  templateUrl: './subboard.component.html',\r\n  styleUrls: ['./subboard.component.css']\r\n})\r\nexport class SubboardComponent implements OnInit {\r\n  type: String;\r\n\r\n  loggedIn: Boolean;\r\n  title: String;\r\n  sub: Object;\r\n  subcontents: Object[];\r\n  user: Object;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private handleboardService: HandleboardService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.type = this.route.snapshot.queryParamMap.get('type');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.loggedIn().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n      this.handleboardService.getSubcontents(this.type).subscribe(result => {\r\n        if ( result.result ) {\r\n          this.title = result.title;\r\n          this.sub = result.sub;\r\n          this.subcontents = result.subcontents;\r\n          this.user = result.user;\r\n        }\r\n        else {\r\n          this.router.navigate(['./start']);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\" *ngIf=\\\"loggedIn\\\">\\r\\n  <span>구독한 게시판</span><hr/><br/>\\r\\n  <ul *ngFor=\\\"let val of user.subscribes\\\">\\r\\n    <li>\\r\\n      <a class=\\\"link\\\" style=\\\"font-size:16px;\\\" [routerLink]=\\\"['./subboard']\\\" [queryParams]=\\\"{type: val}\\\">{{val}}</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"box\\\">\\r\\n  <span>서브게시판 목록</span><hr/><br/>\\r\\n  <ul *ngIf=\\\"loggedIn\\\">\\r\\n    <ng-container *ngFor=\\\"let val of sub\\\">\\r\\n      <li>\\r\\n        <a class=\\\"link\\\" style=\\\"font-size:16px;\\\" href=\\\"javascript:;\\\" (click)=\\\"onSubscribeBoard(val.id)\\\">{{val.id}}</a> \\r\\n        <span style=\\\"font-size:12px; color:grey;\\\">[{{val.subscribes-1}}]</span>\\r\\n      </li>\\r\\n    </ng-container>\\r\\n  </ul>\\r\\n  <ul *ngIf=\\\"!loggedIn\\\">\\r\\n    <ng-container *ngFor=\\\"let val of sub\\\">\\r\\n      <li>\\r\\n        {{val.id}} <span style=\\\"font-size:12px; color:grey;\\\">[{{val.subscribes-1}}]</span>\\r\\n      </li>\\r\\n    </ng-container>\\r\\n  </ul>\\r\\n  <br/><br/>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { HandleboardService } from '../../services/handleboard.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-subs',\r\n  templateUrl: './subs.component.html',\r\n  styleUrls: ['./subs.component.css']\r\n})\r\nexport class SubsComponent implements OnInit {\r\n  loggedIn: Boolean;\r\n  sub: Object[];\r\n  user: Object;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private router: Router,\r\n    private flashMessage: NgFlashMessageService,\r\n    private handleboardService: HandleboardService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.loggedIn().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n      this.handleboardService.getSubs().subscribe(data => {\r\n        this.sub = data.sub;\r\n        this.user = data.user;\r\n      })\r\n    });\r\n  }\r\n\r\n  onSubscribeBoard(subid) {\r\n    this.handleuserService.subscribeBoard(subid).subscribe(data => {\r\n      if ( data.message == 'done' ) {\r\n        this.router.navigate(['./subs']);\r\n      }\r\n      else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['에러 발생: ' + data.message],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\">\\r\\n  <span id=\\\"visitor\\\">건의사항</span><hr/><br/>\\r\\n\\r\\n  <form (submit)=\\\"onWrite()\\\" *ngIf=\\\"loggedIn\\\">\\r\\n    <table style=\\\"width:700px; margin:auto\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          <textarea cols=\\\"80\\\" rows=\\\"5\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment\\\"></textarea>\\r\\n        </td>\\r\\n        <td>\\r\\n          <input type=\\\"submit\\\" name=\\\"cmt\\\" value=\\\"작성\\\" style=\\\"width:100px; height:80px\\\"/>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </form>\\r\\n\\r\\n  <table class=\\\"tb2\\\" *ngFor=\\\"let val of content\\\">\\r\\n    <tr style=\\\"height:110px; vertical-align:top;\\\">\\r\\n      <td style=\\\"text-align:center; vertical-align:middle; width:110px; border-right:1px solid rgb(0,91,159)\\\">\\r\\n        <img width=\\\"70\\\" height=\\\"70\\\"/>\\r\\n      </td>\\r\\n      <td>\\r\\n        <div style=\\\"font-size:12px; padding:2px; margin-left:5px; border-bottom:1px dotted rgb(0,91,159);\\\">\\r\\n          <b *ngIf=\\\"val.id == 'admin'\\\">\\r\\n            <a class=\\\"tblink\\\" href=\\\"javascript:;\\\">{{val.nickname}}</a>\\r\\n          </b>\\r\\n          <a *ngIf=\\\"val.id != 'admin'\\\" class=\\\"tblink\\\" href=\\\"javascript:;\\\">{{val.nickname}}</a>\\r\\n          <span style=\\\"font-size:12px; float:right;\\\">{{val.writedate}}</span>\\r\\n        </div>\\r\\n        <div style=\\\"padding-left:10px;\\\">\\r\\n          <pre class=\\\"contentView\\\">{{val.comment}}</pre>\\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n\\r\\n</div>>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { HandleboardService } from '../../services/handleboard.service';\r\n\r\n@Component({\r\n  selector: 'app-suggest',\r\n  templateUrl: './suggest.component.html',\r\n  styleUrls: ['./suggest.component.css']\r\n})\r\nexport class SuggestComponent implements OnInit {\r\n  loggedIn: boolean;\r\n  content: any[];\r\n  comment: String;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private handleboardService: HandleboardService,\r\n    private router: Router,\r\n    private http: Http,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.handleuserService.loggedIn().subscribe(data => {\r\n      this.loggedIn = data.result;\r\n      this.handleboardService.getSuggests().subscribe(data => {\r\n        this.content = data.content;\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  onWrite() {\r\n    const formData = {\r\n      comment: this.comment\r\n    }\r\n    this.handleboardService.handleSuggest(formData).subscribe(data => {\r\n      if ( data.success ) {\r\n        // this.router.navigate(['./suggest']);\r\n        this.router.navigated = false;\r\n        this.router.navigate(['./suggest']);\r\n      }\r\n      else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['글작성 에러'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"box\\\"><span>글 작성</span>\\r\\n  <hr/><br/>\\r\\n  <form (submit)=\\\"submitWrite(fileInput.files)\\\">\\r\\n      <table style=\\\"margin:auto; width:700px; text-align:center;\\\">\\r\\n          <tr>\\r\\n              <td style=\\\"height:50px;\\\"><input type=\\\"text\\\" placeholder=\\\"제목\\\" name=\\\"title\\\" [(ngModel)]=\\\"title\\\" style=\\\"width:600px; height:30px;\\\" /></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td><textarea cols=\\\"90\\\" rows=\\\"30\\\" name=\\\"content\\\" [(ngModel)]=\\\"content\\\"></textarea></td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n              <td style=\\\"height:50px;\\\"><input type=\\\"text\\\" name=\\\"tag\\\" [(ngModel)]=\\\"tag\\\" placeholder=\\\"html 태그를 입력해주세요\\\" style=\\\"width:500px;\\\" /><br/><br/>\\r\\n                <input type=\\\"file\\\" name=\\\"image\\\" [(ngModel)]=\\\"image\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange(fileInput.files)\\\" /><span class=\\\"link\\\">이미지 (jpg,jpeg,png,gif)</span><br/>\\r\\n                <input type=\\\"file\\\" name=\\\"audio\\\" [(ngModel)]=\\\"audio\\\" accept=\\\"audio/*\\\" (change)=\\\"onFileChange(fileInput.files)\\\" /><span class=\\\"link\\\">음악 (mp3, ogg, wav)</span><br/>\\r\\n                <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"작성\\\" style=\\\"float:right;\\\" /><input type=\\\"hidden\\\" name=\\\"boardtype\\\" [(ngModel)]=\\\"boardtype\\\" value=\\\"{{type}}\\\" /></td>\\r\\n          </tr>\\r\\n      </table>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HandleuserService } from '../../services/handleuser.service';\r\nimport { HandleboardService } from '../../services/handleboard.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-write',\r\n  templateUrl: './write.component.html',\r\n  styleUrls: ['./write.component.css']\r\n})\r\nexport class WriteComponent implements OnInit {\r\n  title: String;\r\n  content: String;\r\n  tag: String;\r\n  fileSrc: any;\r\n\r\n  constructor(\r\n    private handleuserService: HandleuserService,\r\n    private handleboardSerivce: HandleboardService,\r\n    private router: Router,\r\n    private http: Http,\r\n    private flashMessage: NgFlashMessageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fileSrc = '';\r\n  }\r\n\r\n  onFileChange(files: FileList) {\r\n    if ( files && files.length > 0 ) {\r\n      const file = files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        this.fileSrc = reader.result;\r\n      }\r\n    }\r\n  }\r\n\r\n  submitWrite() {\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HandleboardService {\r\n\r\n  constructor(private http:Http) { }\r\n\r\n  getFrees() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/free', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  getMusics() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/music', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  getSuggests() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/suggest', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  getSubcontents(type) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/subboard?type='+type, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  getNotices() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/notice', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  getSubs() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/subs', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  handleWrite(formData) {\r\n    let headers = new Headers();\r\n    headers.append('enctype', 'multipart/form-data');\r\n    return this.http.post('http://localhost:3000/handleWrite', formData, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  handleSuggest(formData) {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    return this.http.post('http://localhost:3000/handleSuggest', formData, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  handleNotice(formData) {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    return this.http.post('http://localhost:3000/handleNotice', formData, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable(\r\n  // {providedIn: 'root'}\r\n)\r\nexport class HandleuserService {\r\n\r\n  constructor(\r\n    private http:Http,\r\n    private router:Router\r\n  ) { }\r\n\r\n  loggedIn() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/login/ng', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  loggingIn(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/login', user, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  getLoginData() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/login/data', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  logout() {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get('http://localhost:3000/logout', {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  handleRegi(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/handleRegi', user, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  subscribeBoard(subid) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post('http://localhost:3000/ajax/subscribeboard', {subid: subid}, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n  fixUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'multipart/form-data');\r\n    return this.http.post('http://localhost:3000/handleFix', user, {headers: headers}).pipe(map((res: Response) => res.json()));\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}